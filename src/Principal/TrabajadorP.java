/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Principal;

import WebCam.Dispositivos;
import Clases.Conexion;
import Clases.PlanAlimenticio;
import javax.swing.JOptionPane;
import Clases.Trabajador;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reymundo Tenorio
 */
public class TrabajadorP extends javax.swing.JFrame {

    /**
     * Creates new form Estudiante
     */
    public TrabajadorP() {
        initComponents();
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        TabbedPane = new org.edisoncor.gui.tabbedPane.TabbedPaneHeader();
        PanelNuevo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCarnet = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        rdFemenino = new javax.swing.JRadioButton();
        rdMasculino = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        cmbPuesto = new javax.swing.JComboBox();
        jPanel9 = new javax.swing.JPanel();
        btnFoto = new javax.swing.JButton();
        jLblFoto = new javax.swing.JLabel();
        PanelVer = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbbusc = new javax.swing.JComboBox();
        btnbuscar = new javax.swing.JButton();
        txtbusc = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnbeca = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnmodify = new javax.swing.JButton();
        btnshowall = new javax.swing.JButton();
        btnprint = new javax.swing.JButton();
        btncancel3 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLblFoto1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Trabajador");
        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TabbedPane.setBackground(new java.awt.Color(0, 204, 204));
        TabbedPane.setColorDeBorde(new java.awt.Color(0, 204, 204));
        TabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TabbedPaneMousePressed(evt);
            }
        });
        TabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                TabbedPaneStateChanged(evt);
            }
        });

        PanelNuevo.setBackground(new java.awt.Color(0, 153, 204));
        PanelNuevo.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        btnnew.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnnew.setForeground(new java.awt.Color(255, 255, 255));
        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo_1.png"))); // NOI18N
        btnnew.setMnemonic('n');
        btnnew.setText("Nuevo");
        btnnew.setToolTipText("Ingresar Nuevo Estudiante");
        btnnew.setContentAreaFilled(false);
        btnnew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnnew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });
        jPanel1.add(btnnew);

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Agregar.png"))); // NOI18N
        btnsave.setMnemonic('g');
        btnsave.setText("Guardar");
        btnsave.setToolTipText("Guardar Estudiante");
        btnsave.setContentAreaFilled(false);
        btnsave.setEnabled(false);
        btnsave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnsave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnsave);

        btncancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel.setForeground(new java.awt.Color(255, 255, 255));
        btncancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel.setMnemonic('c');
        btncancel.setText("Cancelar");
        btncancel.setToolTipText("Cancelar / Salir");
        btncancel.setContentAreaFilled(false);
        btncancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });
        jPanel1.add(btncancel);

        PanelNuevo.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel6.setBackground(new java.awt.Color(0, 153, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Información Nuevo Trabajador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(235, 235, 150));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridLayout(7, 2, 0, 5));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombres");
        jPanel3.add(jLabel2);

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNombre.setToolTipText("Ingrese Nombres del Estudiante");
        txtNombre.setEnabled(false);
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        jPanel3.add(txtNombre);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Apellidos");
        jPanel3.add(jLabel4);

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtApellido.setToolTipText("Ingrese Apellidos del Estudiante");
        txtApellido.setEnabled(false);
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });
        jPanel3.add(txtApellido);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("No. Carné");
        jPanel3.add(jLabel5);

        try {
            txtCarnet.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCarnet.setToolTipText("Ingrese No. Carné del Estudiante");
        txtCarnet.setEnabled(false);
        txtCarnet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCarnet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCarnetFocusGained(evt);
            }
        });
        jPanel3.add(txtCarnet);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("No. Cédula");
        jPanel3.add(jLabel7);

        try {
            txtCedula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-######-####U")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCedula.setToolTipText("Ingrese No. Carné del Estudiante");
        txtCedula.setEnabled(false);
        txtCedula.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaFocusGained(evt);
            }
        });
        jPanel3.add(txtCedula);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Sexo");
        jPanel3.add(jLabel6);

        jPanel10.setOpaque(false);

        buttonGroup1.add(rdFemenino);
        rdFemenino.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdFemenino.setForeground(new java.awt.Color(255, 255, 255));
        rdFemenino.setText("Femenino");
        rdFemenino.setEnabled(false);
        rdFemenino.setOpaque(false);
        jPanel10.add(rdFemenino);

        buttonGroup1.add(rdMasculino);
        rdMasculino.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdMasculino.setForeground(new java.awt.Color(255, 255, 255));
        rdMasculino.setText("Masculino");
        rdMasculino.setEnabled(false);
        rdMasculino.setOpaque(false);
        jPanel10.add(rdMasculino);

        jPanel3.add(jPanel10);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Puesto");
        jPanel3.add(jLabel8);

        cmbPuesto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbPuesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Seleccione>", "Docentes", "Adminitrativos", "Seguridad", "Limpieza" }));
        cmbPuesto.setToolTipText("Seleccione Facultad del Estudiante");
        cmbPuesto.setEnabled(false);
        cmbPuesto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPuestoItemStateChanged(evt);
            }
        });
        jPanel3.add(cmbPuesto);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fotografía Trabajador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel9.setOpaque(false);

        btnFoto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFoto.setForeground(new java.awt.Color(255, 255, 255));
        btnFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Foto.png"))); // NOI18N
        btnFoto.setMnemonic('a');
        btnFoto.setText("Agregar Foto");
        btnFoto.setToolTipText("Seleccionar Fotografía del Estudiante");
        btnFoto.setContentAreaFilled(false);
        btnFoto.setEnabled(false);
        btnFoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFoto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotoActionPerformed(evt);
            }
        });

        jLblFoto.setForeground(new java.awt.Color(235, 235, 150));
        jLblFoto.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFoto)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PanelNuevo.add(jPanel6, java.awt.BorderLayout.CENTER);

        TabbedPane.addTab("Nuevo Trabajador", PanelNuevo);

        PanelVer.setBackground(new java.awt.Color(235, 235, 150));
        PanelVer.setLayout(new javax.swing.BoxLayout(PanelVer, javax.swing.BoxLayout.LINE_AXIS));

        jPanel7.setBackground(new java.awt.Color(0, 153, 204));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(235, 235, 150));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Trabajador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar Por: ");

        cmbbusc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbbusc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No. Carné", "Nombres del Trabajador", "Apellidos del Trabajador", "No. Cédula del Trabajador", "Sexo", "Puesto", "Estado", "Plan Alimenticio" }));
        cmbbusc.setToolTipText("Buscar Por:");

        btnbuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnbuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buscar_1.png"))); // NOI18N
        btnbuscar.setMnemonic('b');
        btnbuscar.setText("Buscar");
        btnbuscar.setToolTipText("Buscar Agente Vendedor");
        btnbuscar.setContentAreaFilled(false);
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });

        txtbusc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscKeyReleased(evt);
            }
        });
        /*txtbusc = new AutoComplete.AutoCompletar();

        ((AutoCompletar)txtbusc).setDesplegable(new DesplegableJPopUPMenu(txtbusc));

        ModeloAutoCompletar modelo1 = new ModeloVendNames();

        ((AutoCompletar)txtbusc).setModelo(modelo1);
        ((AutoCompletar)txtbusc).getDesplegable().setForeground(new Color(102,153,255));

        ((AutoCompletar)txtbusc).addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscTyped(evt);
            }
        });

        ((AutoCompletar)txtbusc).setToolTipText("Ingresar Dato a Buscar");*/

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtbusc, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbuscar)
                    .addComponent(txtbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setToolTipText("Lista de Agentes Vendedores");
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jPanel7.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(0, 102, 153));

        btnbeca.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnbeca.setForeground(new java.awt.Color(255, 255, 255));
        btnbeca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Beca.png"))); // NOI18N
        btnbeca.setMnemonic('o');
        btnbeca.setText("Agregar a Plan");
        btnbeca.setToolTipText("Agregar Trabajador a Plan Alimenticio");
        btnbeca.setContentAreaFilled(false);
        btnbeca.setEnabled(false);
        btnbeca.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnbeca.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnbeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbecaActionPerformed(evt);
            }
        });
        btnbeca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnbecaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnbecaFocusLost(evt);
            }
        });
        jPanel5.add(btnbeca);

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btndelete.setForeground(new java.awt.Color(255, 255, 255));
        btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png"))); // NOI18N
        btndelete.setMnemonic('A');
        btndelete.setText("Activar");
        btndelete.setToolTipText("Activar/Desactivar Estudiante Seleccionado");
        btndelete.setContentAreaFilled(false);
        btndelete.setEnabled(false);
        btndelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btndelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        btndelete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btndeleteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btndeleteFocusLost(evt);
            }
        });
        jPanel5.add(btndelete);

        btnmodify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnmodify.setForeground(new java.awt.Color(255, 255, 255));
        btnmodify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        btnmodify.setMnemonic('o');
        btnmodify.setText("Modificar");
        btnmodify.setToolTipText("Modificar Estudiante Seleccionado");
        btnmodify.setContentAreaFilled(false);
        btnmodify.setEnabled(false);
        btnmodify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnmodify.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnmodify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodifyActionPerformed(evt);
            }
        });
        btnmodify.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnmodifyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnmodifyFocusLost(evt);
            }
        });
        jPanel5.add(btnmodify);

        btnshowall.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnshowall.setForeground(new java.awt.Color(255, 255, 255));
        btnshowall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/tablatodos.png"))); // NOI18N
        btnshowall.setMnemonic('m');
        btnshowall.setText("Mostrar Todos");
        btnshowall.setToolTipText("Mostrar Todos Los Estudiantes");
        btnshowall.setContentAreaFilled(false);
        btnshowall.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnshowall.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnshowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowallActionPerformed(evt);
            }
        });
        jPanel5.add(btnshowall);

        btnprint.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnprint.setForeground(new java.awt.Color(255, 255, 255));
        btnprint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Imprimir.png"))); // NOI18N
        btnprint.setMnemonic('i');
        btnprint.setText("Imprimir");
        btnprint.setToolTipText("Imprimir/Mostrar Reporte de Estudiantes");
        btnprint.setContentAreaFilled(false);
        btnprint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnprint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });
        jPanel5.add(btnprint);

        btncancel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncancel3.setForeground(new java.awt.Color(255, 255, 255));
        btncancel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Cancelar.png"))); // NOI18N
        btncancel3.setMnemonic('c');
        btncancel3.setText("Cancelar");
        btncancel3.setToolTipText("Cancelar / Salir");
        btncancel3.setContentAreaFilled(false);
        btncancel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncancel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel3ActionPerformed(evt);
            }
        });
        jPanel5.add(btncancel3);

        jPanel7.add(jPanel5, java.awt.BorderLayout.SOUTH);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fotografía Trabajador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel11.setOpaque(false);

        jLblFoto1.setForeground(new java.awt.Color(235, 235, 150));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.add(jPanel11, java.awt.BorderLayout.EAST);

        PanelVer.add(jPanel7);

        TabbedPane.addTab("Ver Trabajadores", PanelVer);

        getContentPane().add(TabbedPane, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1209, 722));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private int ID_Trabajador;
    private boolean Modify;
    private String File;
    private MenuPrincipal MP;
    private String Foto;

    public void Foto (String Foto) {
        this.Foto = Foto;
    }
      
   
    public void setFoto(){
        
           File = this.Foto;
           jLblFoto.setIcon(new ImageIcon(File));
            //Convirtiendo Imagen a ImageIcon
            ImageIcon icon = new ImageIcon(File);
            //Se Extrae La Imagen de Icono
            Image img = icon.getImage();
            //Se Cambia y Ajusta El Tamano de La Imagen
            Image newimg = img.getScaledInstance(342,350,java.awt.Image.SCALE_SMOOTH);
            //Se Genera La Nueva Imagen Con El ImageIcon
            ImageIcon newIcon = new ImageIcon(newimg);
            //Se Coloca el Nuevo Icono Modificado
            jLblFoto.setIcon(newIcon);
            //Se Cambia el Tamano de la Etiqueta
            jLblFoto.setSize(256,256);
    }
    
    
    public void setMP(MenuPrincipal MP) {
        this.MP = MP;
    }
    
    
    public static ResultSet resultado;

    
    
   
    
    public void Guardar (){
        
        
        
        String Nombres, Apellidos, Carnet, Foto, Cedula , Sexo, Puesto;
        
        Nombres = txtNombre.getText().trim();
        Apellidos = txtApellido.getText().trim();
        Cedula = txtCedula.getText();
        Carnet = txtCarnet.getText();
        Puesto = (String) cmbPuesto.getSelectedItem();
        Foto = File;
        
        if(rdFemenino.isSelected()){
            Sexo = "Femenino";
        }
        else{
            Sexo = "Masculino";
        }
              
        
        if("<Seleccione>".equals(Puesto)){

            JOptionPane.showMessageDialog(this,"Seleccione El Puesto del Trabajador","Seleccione",JOptionPane.ERROR_MESSAGE);
            return;
        }

       if("   -    -     ".equals(Cedula)){

            JOptionPane.showMessageDialog(this,"Ingrese El Número de Cédula del Trabajador","Seleccione",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if("    -     ".equals(Carnet)){
           JOptionPane.showMessageDialog(this,"Ingrese El Número de Carné del Trabajador","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
        }

        if("".equals(Nombres))  {
            JOptionPane.showMessageDialog(this,"Ingrese Los Nombres del Trabajador","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
        
        if("".equals(Apellidos))  {
            JOptionPane.showMessageDialog(this,"Ingrese Los Apellidos del Trabajador","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
         
        if("".equals(Foto) && Modify == false)  {
            JOptionPane.showMessageDialog(this,"Seleccione La Fotografía del Trabajador","Ingrese",JOptionPane.ERROR_MESSAGE);
            return;
           }
       
  
      
            if(Modify==true){

              
                int ID = ID_Trabajador;
              
               Trabajador.Actualizar_Trabajador(ID, Carnet, Nombres, Apellidos, Cedula, Sexo, Puesto);
              
               if(!"".equals(Foto)){
               Trabajador.Agregar_ImagenTrabajador(ID, Foto);
                }
                
                ActualizarTabla();
                CleanAll();
                DisableAll();
                Modify = false;
            }
            else{

                int ID = 0;
                
                try{
                    
                    resultado = Conexion.consulta("Select Max(ID_Trabajador) from [dbo].[Trabajador]");
                    
                    while(resultado.next()){
                         
                     ID = resultado.getInt(1);
                        
                    }
                    
                }catch (SQLException ex){
                      JOptionPane.showMessageDialog(null,ex.getMessage());  
                }
                
                ID = ID+1;
             
                Trabajador.Agregar_Trabajador(Carnet, Nombres, Apellidos, Cedula, Sexo, Puesto);
                Trabajador.Agregar_ImagenTrabajador(ID, Foto);
                
                ActualizarTabla();
                CleanAll();
                DisableAll();

            }
    }
    
    public void CleanAll(){
        txtApellido.setText("");
        txtCarnet.setText("");
        txtNombre.setText("");
        txtCedula.setText("");
        cmbPuesto.setSelectedIndex(0);
        File = "";
        rdFemenino.setSelected(true);
        jLblFoto.setIcon(null);
    }
    
    public void EnableAll(){
        txtApellido.setEnabled(true);
        txtCarnet.setEnabled(true);
        txtNombre.setEnabled(true);
        txtCedula.setEnabled(true);   
        cmbPuesto.setEnabled(true);
        rdFemenino.setEnabled(true);
        rdMasculino.setEnabled(true);
        jLblFoto.setEnabled(true);
        btnFoto.setEnabled(true);
        btnsave.setEnabled(true);
        
    }
    
      public void DisableAll(){
          
        txtApellido.setEnabled(false);
        txtCarnet.setEnabled(false);
        txtNombre.setEnabled(false);
        txtCedula.setEnabled(true);
        cmbPuesto.setEnabled(false);
        rdFemenino.setEnabled(false);
        rdMasculino.setEnabled(false);
        jLblFoto.setEnabled(false);
        btnFoto.setEnabled(false);
        btnsave.setEnabled(false);
        
    }
     
    public void AddPic(){
        
          JFileChooser dlg = new JFileChooser();
          FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG, PNG, GIF, BMP, & TIFF","jpg","png","gif","bmp", "tif");
         
          dlg.setFileFilter(filtroImagen);
        
        int option = dlg.showOpenDialog(this);

        if(option==JFileChooser.APPROVE_OPTION) {
            //Obtiene La Ruta del Archivo Seleccionado
            File = dlg.getSelectedFile().getPath();
        
            jLblFoto.setIcon(new ImageIcon(File));
            //Convirtiendo Imagen a ImageIcon
            ImageIcon icon = new ImageIcon(File);
            //Se Extrae La Imagen de Icono
            Image img = icon.getImage();
            //Se Cambia y Ajusta El Tamano de La Imagen
            Image newimg = img.getScaledInstance(342,350,java.awt.Image.SCALE_SMOOTH);
            //Se Genera La Nueva Imagen Con El ImageIcon
            ImageIcon newIcon = new ImageIcon(newimg);
            //Se Coloca el Nuevo Icono Modificado
            jLblFoto.setIcon(newIcon);
            //Se Cambia el Tamano de la Etiqueta
            jLblFoto.setSize(256,256);
        }
    }
    
    
   
    
   public void ActualizarTabla(){
        
        
       model.setRowCount(0);
       jTable1.setModel(model);
       
      
        try{
            
        
        resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV]");

        
       
     
       while (resultado.next())
       {     
             String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
           
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);  
   
    }
       
       jTable1.setModel(model);
    
   
    
       
        
    }   catch (SQLException ex) {
      JOptionPane.showMessageDialog(null,ex.getMessage()); 
    }
        
          
    }
    
    public void Buscar(){
     
        int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

            case 1:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [No_Carne_Trabajador] = '"+Buscar+"'");

                while (resultado.next())
                {
           
            String [] Datos = new String [9]; 

            

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
          
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No. Carné de Trabajador No Encontrado");
            }

            break;

            case 2:
                
                
            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Nombres_Trabajador]  = '"+Buscar+"'");

                while (resultado.next())
                {
            
             String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
            
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Nombres de Trabajador No Encontrado");
            }

            break;
                
            case 3:
                
 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Apellidos_Trabajador] = '"+Buscar+"'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
           
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);



                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Apellidos de Trabajador No Encontrado");
            }
          
            break;
           
                
                 case 4:

                
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [No_Cedula_Trabajador] = '"+Buscar+"'");

                while (resultado.next())
                {
                    String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
          
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No. Cédula de Trabajador No Encontrado");
            }
                 
                 
            break;
                     
            case 5:
                
                  try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                
               
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Sexo_Trabajador] = '"+Buscar+"'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
             
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Sexo de Trabajador No Encontrado");
            }
            

            break;
            
            case 6:
 
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Puesto_Trabajador] = '"+Buscar+"'");

                while (resultado.next())
                {
                    String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
            
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Puesto del Trabajador No Encontrado");
            }
                 
            break;
                
            case 7:
                
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Estado_Trabajador] = '"+Buscar+"'");

                while (resultado.next())
                {
             
             String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
            
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Estado de Trabajador No Encontrado");
            }

            break;
           
            case 8:

                
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [PlanAlimento] = '"+Buscar+"'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
            
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Plan Alimenticio de Trabajador No Encontrado");
            }
                 
                 
            break;
                
            
            default:

            break;

          
        
        }
        jTable1.setModel(model);
        
        
    }
    
    
    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed

        Buscar();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void txtbuscKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscKeyReleased
             int index = cmbbusc.getSelectedIndex()+1;

        switch(index){

            case 1:

            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [No_Carne_Trabajador] like '%"+Buscar+"%'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
           
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No. Carné de Trabajador No Encontrado");
            }

            break;

            case 2:
                
                
            try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Nombres_Trabajador] like '%"+Buscar+"%'");

                while (resultado.next())
                {
            
            String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
           
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Nombres de Trabajador No Encontrado");
            }

            break;
                
            case 3:
                
 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Apellidos_Trabajador] like '%"+Buscar+"%'");
                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
            
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);



                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Apellidos de Trabajador No Encontrado");
            }
          
            break;
           
                
                 case 4:

                
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [No_Cedula_Trabajador] like '%"+Buscar+"%'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
            
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"No. Cédula de Trabajador No Encontrado");
            }
                 
                 
            break;
                     
            case 5:
                
                  try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
            
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Sexo_Trabajador] like '%"+Buscar+"%'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
           
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
         
              
              model.addRow(Datos);

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Sexo de Trabajador No Encontrado");
            }
            

            break;
            
            case 6:
 
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Puesto_Trabajador] like '%"+Buscar+"%'");

                while (resultado.next())
                {
                    String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
          
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Puesto del Trabajador No Encontrado");
            }
                 
            break;
                
            case 7:
                
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [Estado_Trabajador] like '%"+Buscar+"%'");

                while (resultado.next())
                {
                    String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
          
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Estado de Trabajador No Encontrado");
            }

            break;
           
            case 8:

                
                 try{
                model.setRowCount(0);
                String Buscar = txtbusc.getText();
                resultado = Conexion.consulta("Select * from [dbo].[TrabajadorV] where [PlanAlimento] like '%"+Buscar+"%'");

                while (resultado.next())
                {
                   String [] Datos = new String [9]; 

             String  Sexo;
 
              Datos [0]= String.valueOf(resultado.getInt(1));    
              Datos [1]= resultado.getString(2);
              Datos [2]= resultado.getString(3);
              Datos [3]= resultado.getString(4);
              Datos [4]= resultado.getString(5);
              
              Sexo = resultado.getString(6);
              
            
              
              Datos [5]= Sexo;
              Datos [6]= resultado.getString(7);
              Datos [7]= resultado.getString(8);
              Datos [8]= resultado.getString(9);
         
              model.addRow(Datos);


                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Plan Alimenticio de Trabajador No Encontrado");
            }
                 
                 
            break;
                
            
            default:

            break;

          
        
        }
        jTable1.setModel(model);
            // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
     String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
       else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
        
        
        if(evt.getClickCount()==2 && evt.getButton()==java.awt.event.MouseEvent.BUTTON1){           
        
        
       int fila = jTable1.getSelectedRow();
        if (fila > -1){
      if(evt.getClickCount()==2 && evt.getButton()==java.awt.event.MouseEvent.BUTTON1){
          int ID = 0;
          
         ID = Integer.parseInt(this.jTable1.getModel().getValueAt(fila, 0).toString());
         
         byte[] fileBytes;
         String query;
                 
         try
                 {
                         query = "Select [Foto_Trabajador] from [dbo].[Trabajador] where [ID_Trabajador] = "+ID;
                         Statement state = Conexion.con.createStatement();
                         ResultSet rs = state.executeQuery(query);
                         if (rs.next())
                        {
                                 fileBytes = rs.getBytes(1);
                                 ImageIcon n = null;
                                 try{
                                  n = new ImageIcon(fileBytes);
                               
                                 Image img = n.getImage();
                                 
                                 
                    Image newimg = img.getScaledInstance(289,292,java.awt.Image.SCALE_SMOOTH);
                    ImageIcon newIcon = new ImageIcon(newimg);
                    jLblFoto1.setIcon(newIcon);
                    
                      }catch(NullPointerException ex){
                               
                                 }
                                 
                        }        
                        
                 }
                 catch (SQLException e)
                 {
                         JOptionPane.showMessageDialog(null, "Error Al Mostrar Imagen","Error",JOptionPane.ERROR_MESSAGE);
                        
                 }
      }
        }
        }
           
            
        
       

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
            if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusLost

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed

       String Estado1, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado1 = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado1)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado1)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado1)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
       else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
        
        int fila = jTable1.getSelectedRow();

        int ID;
        String Nombre;
        int v=JOptionPane.NO_OPTION;
        String Estado;
        String Apellido;

        if (fila > -1){
            
            

            ID= Integer.parseInt(this.jTable1.getModel().getValueAt(fila, 0).toString());
            Apellido = ((String)this.jTable1.getModel().getValueAt(fila, 3));
            Nombre=((String)this.jTable1.getModel().getValueAt(fila, 2));
            Estado = ((String)this.jTable1.getModel().getValueAt(fila, 7));

           
            
            if("Activo".equalsIgnoreCase(Estado)){
                
                v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Desactivar al Trabajador "+Nombre.trim()+" "+Apellido.trim()+"?", "Confirmación", JOptionPane.YES_NO_OPTION);
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             
                v= JOptionPane.showConfirmDialog(this, "Está Seguro Que Desea Activar al Trabajador "+Nombre.trim()+" "+Apellido.trim()+"?", "Confirmación", JOptionPane.YES_NO_OPTION);
            }

            if(v==JOptionPane.YES_OPTION){

                
                Trabajador.Activar_Desactivar_Trabajador(ID);
                ActualizarTabla();
            }
        }

        else{

            JOptionPane.showMessageDialog(this, "Seleccione Un Trabajador a Activar/Desactivar", "Error", JOptionPane.ERROR_MESSAGE);

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btndeleteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btndeleteFocusGained
        
        String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
            if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
              // TODO add your handling code here:
    }//GEN-LAST:event_btndeleteFocusGained

    private void btnmodifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodifyActionPerformed

       
         String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
        
        
        int fila = jTable1.getSelectedRow();

        int ID;
        String Nombres, Apellidos, Carnet, Foto,
        Cedula , Sexo, Puesto;    
        
        if (fila > -1){

            ID= Integer.parseInt(this.jTable1.getModel().getValueAt(fila, 0).toString());
            Carnet=((String)this.jTable1.getModel().getValueAt(fila, 1));
            Nombres=((String)this.jTable1.getModel().getValueAt(fila, 2));
            Apellidos=((String)this.jTable1.getModel().getValueAt(fila, 3));
            Cedula =((String)this.jTable1.getModel().getValueAt(fila, 4));
            Sexo=((String)this.jTable1.getModel().getValueAt(fila, 5));
            Puesto =((String)this.jTable1.getModel().getValueAt(fila, 6));
          

            CleanAll();
            EnableAll();

        
        ID_Trabajador = ID;
        txtNombre.setText(Nombres);
        txtApellido.setText(Apellidos);
        
        
        
        txtCarnet.setText(Carnet);
         
        
      txtCedula.setText(Cedula);
      
        if( "Masculino".equals(Sexo)){
            rdMasculino.setSelected(true);
        }
        if( "Femenino".equals(Sexo)){
            rdFemenino.setSelected(true);
        }
        
        cmbPuesto.setSelectedItem(Puesto);
    
        
           
         byte[] fileBytes;
         String query;
                 
         try
                 {
                         query = "Select [Foto_Trabajador] from [dbo].[Trabajador] where [ID_Trabajador] = "+ID;
                         Statement state = Conexion.con.createStatement();
                         ResultSet rs = state.executeQuery(query);
                         if (rs.next())
                        {
                                 fileBytes = rs.getBytes(1);
                                 ImageIcon n = new ImageIcon(fileBytes);
                                 Image img = n.getImage();
                    Image newimg = img.getScaledInstance(346,350,java.awt.Image.SCALE_SMOOTH);
                    ImageIcon newIcon = new ImageIcon(newimg);
                    jLblFoto.setIcon(newIcon);
                                 
                        }        
                        
                 }
                 catch (SQLException e)
                 {
                         JOptionPane.showMessageDialog(null, "Error Al Mostrar Imagen","Error",JOptionPane.ERROR_MESSAGE);
                        
                 }

            TabbedPane.setSelectedComponent(PanelNuevo);
            Modify=true;

        }

        else{

            JOptionPane.showMessageDialog(this, "Seleccione Un Trabajador a Modificar", "Error", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnmodifyActionPerformed

    private void btnmodifyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnmodifyFocusGained
    String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
             // TODO add your handling code here:
    }//GEN-LAST:event_btnmodifyFocusGained

    private void btnshowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowallActionPerformed
        ActualizarTabla();      // TODO add your handling code here:
    }//GEN-LAST:event_btnshowallActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
        // TODO add your handling code here:

        
//        File miDir = new File ("");
//        String reporte = miDir.getAbsolutePath()+"\\src\\iReport\\Ejecutivos.jasper";
//
//        JasperPrint jp = null;
//        try {
//            jp = JasperFillManager.fillReport(reporte, null,Conexion.con);
//        } catch (JRException ex) {
//            Logger.getLogger(Reportes.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        JasperViewer view = new JasperViewer(jp, false);
//        view.setTitle("Ejecutivos");
//        this.setVisible(false);
//        view.setVisible(true);
//        view.toFront();

       

    }//GEN-LAST:event_btnprintActionPerformed

    private void btncancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel3ActionPerformed
        MP.setVisible(true);  
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancel3ActionPerformed

    private void TabbedPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabbedPaneMousePressed
      
        // TODO add your handling code here:
    }//GEN-LAST:event_TabbedPaneMousePressed

    private void TabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_TabbedPaneStateChanged
       
         // TODO add your handling code here:
    }//GEN-LAST:event_TabbedPaneStateChanged

    private void cmbPuestoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPuestoItemStateChanged
  
        
// TODO add your handling code here:
    }//GEN-LAST:event_cmbPuestoItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    
           
      jTable1.setDefaultRenderer(Object.class, new FormatoTablaEstudiante());
      
        //this.setResizable(false);
        
        String [] Titulo = {"ID", "No.Carné", "Nombres", "Apellidos",
            "No. Cédula", "Sexo", "Puesto", "Estado", "Plan Alimenticio"};
        
        model.setColumnIdentifiers(Titulo);
        
   
        
           ActualizarTabla();
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    MP.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void btnFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotoActionPerformed
              ModoImagen Pic = new ModoImagen(this, false);
              this.setVisible(false);
              Pic.setTrabajadores(this);
              Pic.setVisible(true);
              Pic.toFront(); // TODO add your handling code here:
    }//GEN-LAST:event_btnFotoActionPerformed

    private void btndeleteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btndeleteFocusLost
 String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
            if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
               // TODO add your handling code here:
    }//GEN-LAST:event_btndeleteFocusLost

    private void btnmodifyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnmodifyFocusLost
 String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_btnmodifyFocusLost

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
 
         String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
            if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
       else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
               // TODO add your handling code here:
    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
     String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
        
      // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MousePressed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed

        MP.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed

        Guardar();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed

        EnableAll();
        CleanAll();
    }//GEN-LAST:event_btnnewActionPerformed

    private void txtCarnetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCarnetFocusGained
txtCarnet.setCaretPosition(0);        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarnetFocusGained

    private void txtCedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusGained
txtCedula.setCaretPosition(0);         // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaFocusGained

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
char a = evt.getKeyChar();

if(Character.isDigit(a)&&!Character.isISOControl(a)){
        Toolkit.getDefaultToolkit().beep();
        evt.consume();
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
char a = evt.getKeyChar();

if(Character.isDigit(a)&&!Character.isISOControl(a)){
        Toolkit.getDefaultToolkit().beep();
        evt.consume();
    }        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void btnbecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbecaActionPerformed

     String Estado, Becado;
     
 
        int fila = jTable1.getSelectedRow();
        
        if (fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
            if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }     
        
        
int ID_Alimento = 0;
int ID_Beca = 0;
int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
            
 try {
     
        ID_Beca = Integer.parseInt(this.jTable1.getModel().getValueAt(Fila, 0).toString());
   
        resultado = Conexion.consulta("Select [ID_PlanAlimenticio] from [dbo].[PlanAlimenticio] where [ID_Trabajador] = "+ID_Beca);
   

while(resultado.next()){
ID_Alimento = resultado.getInt(1);

        }
        
     } catch (SQLException ex) {
       
      JOptionPane.showMessageDialog(null,ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);

     }
    
    if(ID_Alimento == 0){
        
        PlanAlimenticio.Agregar_PlanAlimenticio(ID_Beca);
        ActualizarTabla();
    }
    else{
        JOptionPane.showMessageDialog(this, "Trabajador Ya Registrado en Plan Alimenticio", "Aviso", JOptionPane.ERROR_MESSAGE);
    }
        }
        
    }//GEN-LAST:event_btnbecaActionPerformed

    private void btnbecaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnbecaFocusGained
     String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
            if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
      else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
           // TODO add your handling code here:
    }//GEN-LAST:event_btnbecaFocusGained

    private void btnbecaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnbecaFocusLost
      String Estado, Becado;
     
 
        int Fila = jTable1.getSelectedRow();
        
        if (Fila > -1){
           
              btndelete.setEnabled(true);
              btnmodify.setEnabled(true);
        

            Estado = ((String)this.jTable1.getModel().getValueAt(Fila, 7));
            Becado = ((String)this.jTable1.getModel().getValueAt(Fila, 8));

            if("Activo".equalsIgnoreCase(Estado)){
              btndelete.setText("Desactivar");
              btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Desactivar.png")));
            }
            if("Inactivo".equalsIgnoreCase(Estado)){
             btndelete.setText("Activar");
             btndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Activar.png")));
            }
        
             if("No".equals(Becado) && "Activo".equalsIgnoreCase(Estado)){
                btnbeca.setEnabled(true);
            }
            else{
                btnbeca.setEnabled(false);
            }
        }
        else{
            btndelete.setEnabled(false);
            btnmodify.setEnabled(false);
            btnbeca.setEnabled(false);
        }
          // TODO add your handling code here:
    }//GEN-LAST:event_btnbecaFocusLost

    
    
    DefaultTableModel model = new DefaultTableModel() {

    @Override
    public boolean isCellEditable(int row, int column) {
       //all cells false
       return false;
    }
};
     public class FormatoTablaEstudiante extends DefaultTableCellRenderer
{
 @Override
 public Component getTableCellRendererComponent
 (JTable table, Object value, boolean selected, boolean focused, int row, int column)
 {
         
  if(String.valueOf(table.getValueAt(row,7)).equalsIgnoreCase("Inactivo"))  {
      setForeground(Color.RED);
  }
   else { setForeground(Color.BLACK);
   }
  
   if(String.valueOf(table.getValueAt(row,8)).equalsIgnoreCase("Si"))  {
      setForeground(Color.GREEN);
  }
                  
    
 super.getTableCellRendererComponent(table, value, selected, focused, row, column);
 return this;
 }
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrabajadorP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TrabajadorP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelNuevo;
    private javax.swing.JPanel PanelVer;
    private org.edisoncor.gui.tabbedPane.TabbedPaneHeader TabbedPane;
    private javax.swing.JButton btnFoto;
    private javax.swing.JButton btnbeca;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btncancel3;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnmodify;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnprint;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnshowall;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbPuesto;
    private javax.swing.JComboBox cmbbusc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLblFoto;
    private javax.swing.JLabel jLblFoto1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rdFemenino;
    private javax.swing.JRadioButton rdMasculino;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JFormattedTextField txtCarnet;
    private javax.swing.JFormattedTextField txtCedula;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtbusc;
    // End of variables declaration//GEN-END:variables
}
